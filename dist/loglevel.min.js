/*! loglevel - v1.8.1 - https://github.com/pimterry/loglevel - (c) 2022 Tim Perry - licensed MIT */
!function(a,b){"use strict";"function"==typeof define&&define.amd?define(b):"object"==typeof module&&module.exports?module.exports=b():a.log=b()}(this,function(){"use strict";function a(a,b){var c=a[b];if("function"==typeof c.bind)return c.bind(a);try{return Function.prototype.bind.call(c,a)}catch(b){return function(){return Function.prototype.apply.apply(c,[a,arguments])}}}function b(){console.log&&(console.log.apply?console.log.apply(console,arguments):Function.prototype.apply.apply(console.log,[console,arguments])),console.trace&&console.trace()}function c(c){return"debug"===c&&g.SET_DEBUG_TO_LOG&&(c="log"),typeof console!==i&&("trace"===c&&j?b:void 0!==console[c]?a(console,c):void 0!==console.log?a(console,"log"):h)}function d(a,b){for(var c=0;c<k.length;c++){var d=k[c];this[d]=c<a?h:this.methodFactory(d,a,b)}this.log=this.debug}function e(a,b,c){return function(){typeof console!==i&&(d.call(this,b,c),this[a].apply(this,arguments))}}function f(a,b,d){return c(a)||e.apply(this,arguments)}function g(a,b,c){function e(a){var b=(k[a]||"silent").toUpperCase();if(typeof window!==i&&n){try{return void(window.localStorage[n]=b)}catch(a){}try{window.document.cookie=encodeURIComponent(n)+"="+b+";"}catch(a){}}}function h(){var a;if(typeof window!==i&&n){try{a=window.localStorage[n]}catch(a){}if(typeof a===i)try{var b=window.document.cookie,c=b.indexOf(encodeURIComponent(n)+"=");-1!==c&&(a=/^([^;]+)/.exec(b.slice(c))[1])}catch(a){}return void 0===m.levels[a]&&(a=void 0),a}}function j(){if(typeof window!==i&&n){try{return void window.localStorage.removeItem(n)}catch(a){}try{window.document.cookie=encodeURIComponent(n)+"=; expires=Thu, 01 Jan 1970 00:00:00 UTC"}catch(a){}}}var l,m=this;b=null==b?"WARN":b;var n="loglevel";"string"==typeof a?n+=":"+a:"symbol"==typeof a&&(n=void 0),m.name=a,m.levels={TRACE:0,DEBUG:1,INFO:2,WARN:3,ERROR:4,SILENT:5},m.methodFactory=c||f,m.getLevel=function(){return l},m.setLevel=function(b,c){if("string"==typeof b&&void 0!==m.levels[b.toUpperCase()]&&(b=m.levels[b.toUpperCase()]),!("number"==typeof b&&b>=0&&b<=m.levels.SILENT))throw"log.setLevel() called with invalid level: "+b;if(l=b,!1!==c&&e(b),d.call(m,b,a),typeof console===i&&b<m.levels.SILENT)return"No console available for logging"},m.setDefaultLevel=function(a){b=a,h()||m.setLevel(a,!1)},m.resetLevel=function(){m.setLevel(b,!1),j()},m.enableAll=function(a){m.setLevel(m.levels.TRACE,a)},m.disableAll=function(a){m.setLevel(m.levels.SILENT,a)};var o=h();null==o&&(o=b),m.setLevel(o,!1),m.setDebugOverride=function(a){g.SET_DEBUG_TO_LOG=a}}var h=function(){},i="undefined",j=typeof window!==i&&typeof window.navigator!==i&&/Trident\/|MSIE /.test(window.navigator.userAgent),k=["trace","debug","info","warn","error"];g.SET_DEBUG_TO_LOG=!0;var l=new g,m={};l.getLogger=function(a){if("symbol"!=typeof a&&"string"!=typeof a||""===a)throw new TypeError("You must supply a name when creating a logger.");var b=m[a];return b||(b=m[a]=new g(a,l.getLevel(),l.methodFactory)),b};var n=typeof window!==i?window.log:void 0;return l.noConflict=function(){return typeof window!==i&&window.log===l&&(window.log=n),l},l.getLoggers=function(){return m},l.default=l,l});